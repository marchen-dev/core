services:
  postgres:
    image: postgres:16-alpine
    container_name: marchen-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - marchen-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    container_name: marchen-core
    image: suemor/marchen-core:latest
    restart: always
    ports:
      - '23117:23117'
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
      - SENTRY_DSN=${SENTRY_DSN}
      - TURNSTILE_SECRET_KEY=${TURNSTILE_SECRET_KEY}
    networks:
      - marchen-network

  prisma-studio:
    image: node:20-alpine
    container_name: marchen-prisma-studio
    restart: always
    working_dir: /app
    command: sh -c "npm install -g prisma && npx prisma studio"
    volumes:
      - ./prisma:/app/prisma
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
    ports:
      - '5555:5555'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - marchen-network

networks:
  marchen-network:
    driver: bridge
