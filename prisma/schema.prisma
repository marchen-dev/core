generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FriendStatus {
  PENDING // 等待中
  ACCEPTED // 被同意
  ARCHIVED // 已归档
}

enum ConfigKey {
  AI // AI配置
}

enum AiProvider {
  OPENAI
}

model users {
  id        String   @id @default(uuid())
  name      String   @unique
  nickname  String
  password  String
  email     String   @unique
  authCode  String   @unique
  introduce String?
  avatar    String
  social    Json?    @db.JsonB
  created   DateTime @default(now())
}

model friends {
  id        String       @id @default(uuid())
  name      String
  url       String       @unique
  avatar    String
  introduce String
  email     String       @default("test@test.com")
  status    FriendStatus @default(PENDING)
  created   DateTime     @default(now())
}

model posts {
  id           String     @id @default(uuid())
  title        String
  content      String
  read         Int        @default(0)
  cover        String?
  slug         String     @unique
  tags         String[]
  likes        Int        @default(0)
  summary      String?
  summaryModel String?
  categoryId   String
  category     categories @relation(fields: [categoryId], references: [id])
  updated      DateTime   @updatedAt
  created      DateTime   @default(now())
}

model categories {
  id      String   @id @default(uuid())
  name    String   @unique
  slug    String   @unique
  created DateTime @default(now())
  posts   posts[]
}

model site {
  id          String   @id @default(uuid())
  title       String   @default("SuemorのBlog")
  description String   @default("所谓自由就是可以说二加二等于四的自由")
  keywords    String[] @default(["Blog"])
  favicon     String   @default("https://github.com/suemor233.png")
  created     DateTime @default(now())
  url         String   @default("https://suemor.com")
}

model config {
  id      String    @id @default(uuid())
  key     ConfigKey @unique
  value   Json      @db.JsonB
  created DateTime  @default(now())
}

model ai {
  id       String     @id @default(uuid())
  apiUrl   String
  apiKey   String     @unique
  provider AiProvider
  model    String
  active   Boolean    @default(false)
  system   Boolean    @default(false)
  created  DateTime   @default(now())
}

model pages {
  id           String   @id @default(uuid())
  title        String
  content      String
  summary      String?
  summaryModel String?
  icon         String?
  read         Int      @default(0)
  likes        Int      @default(0)
  slug         String   @unique
  created      DateTime @default(now())
}

model analyzes {
  id         Int      @id @default(autoincrement())
  ip         String?
  path       String?
  userAgent  String?
  referer    String?
  method     String?
  statusCode Int?
  duration   Int?
  created    DateTime @default(now())
}
